{% extends 'base.html.twig' %}

{% block title %}SMS List{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-12">
                <button class="btn btn-primary" onclick="fetchSMS()">Fetch SMS</button>
                <button class="btn btn-primary" onclick="toggleCreateForm()">Create New SMS</button>
                <br><br>

                <div class="card" id="smsCard">
                    <div class="card-header">
                        <h1 class="card-title">SMS List</h1>
                    </div>
                    <div class="card-body" id="smsList">
                        <div class="tableContainer">
                            <table class="table">
                                <thead>
                                <tr>
                                    <th>Sender</th>
                                    <th>Receiver</th>
                                    <th>Received Date</th>
                                    <th>Subject</th>
                                    <th>Content</th>
                                    <th></th>
                                </tr>
                                </thead>
                                <tbody>
                                <!--
                                    SMS messages will be added here
                                -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="card" id="createSmsCard" style="display: none;">
                    <form id="createSmsForm" onsubmit="submitCreateForm()">
                        <div class="form-group">
                            <label for="sender">Sender:</label>
                            <input type="text" id="sender" name="sender" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="receiver">Receiver:</label>
                            <input type="text" id="receiver" name="receiver" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="receivedDate">Received Date:</label>
                            <input type="text" id="receivedDate" name="receivedDate" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="subject">Subject:</label>
                            <input type="text" id="subject" name="subject" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="content">Content:</label>
                            <textarea id="content" name="content" class="form-control"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Create SMS</button>
                    </form>
                </div>

                <div class="card" id="editSmsCard" style="display: none;">
                    <div class="card-header">
                        <h1 class="card-title">Edit SMS</h1>
                    </div>
                    <div class="card-body">
                        <form id="editSmsForm" onsubmit="submitEditForm()">
                            <div class="form-group">
                                <label for="id">id:</label>
                                <input type="text" id="id" name="id" class="form-control">
                            </div>
                            <div class="form-group">
                                <label for="sender">Sender:</label>
                                <input type="text" id="sender" name="sender" class="form-control">
                            </div>
                            <div class="form-group">
                                <label for="receiver">Receiver:</label>
                                <input type="text" id="receiver" name="receiver" class="form-control">
                            </div>
                            <div class="form-group">
                                <label for="receivedDate">Received Date:</label>
                                <input type="text" id="receivedDate" name="receivedDate" class="form-control">
                            </div>
                            <div class="form-group">
                                <label for="subject">Subject:</label>
                                <input type="text" id="subject" name="subject" class="form-control">
                            </div>
                            <div class="form-group">
                                <label for="content">Content:</label>
                                <textarea id="content" name="content" class="form-control"></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Update</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        async function fetchSMS () {
            await axios.get('/api/sms')
                .then(function (response) {
                    let smsList = response.data;
                    let smsTableBody = document.querySelector('#smsList tbody');

                    smsTableBody.innerHTML = '';

                    smsList.forEach(function (sms) {
                        let row = document.createElement('tr');
                        row.innerHTML = `
                            <td class="no-wrap">${sms.sender}</td>
                            <td class="no-wrap">${sms.receiver}</td>
                            <td class="no-wrap">${sms.received_date}</td>
                            <td class="no-wrap">${sms.subject}</td>
                            <td class="smsContent">${sms.content}</td>
                            <td class="buttonsCollumn">
                                <button class="btn btn-success smsButton" onclick="showEditCard(${sms.id})">
                                    <i class="fas fa-pen"> </i>
                                </button>
                                <button class="btn btn-danger smsButton" onclick="deleteSMS(${sms.id})">
                                    <i class="fas fa-trash-can"> </i>
                                </button>
                            </td>
                        `;
                        smsTableBody.appendChild(row);
                    });

                    setInterval(sendIntervalData, 5000);
                })
                .catch(function (error) {
                    console.error('Error fetching SMS messages:', error);
                });

        }

        function sendIntervalData() {
            axios.get('/api/sms', {})
                .then(response => {
                    console.log('POST request sent successfully:', response);
                })
                .catch(error => {
                    console.error('Failed to send POST request:', error);
                });
        }


        function submitEditForm(event) {
            event.preventDefault();

            const formData = new FormData(document.getElementById('editSmsForm'));

            const id = document.getElementById('editSmsForm').action.split('/').pop();

            axios.put(`/api/sms/${id}`, formData)
                .then(response => {
                    console.log('Update successful:', response);
                })
                .catch(error => {
                    console.error('Update failed:', error);
                });
        }

        async function showEditCard(id) {
            document.getElementById('smsCard').style.display = 'none';

            await axios.get(`/api/sms/${id}`)
                .then(function (response) {
                    let sms = response.data;
                    document.getElementById('id').value = sms.id;
                    document.getElementById('sender').value = sms.sender;
                    document.getElementById('receiver').value = sms.receiver;
                    document.getElementById('receivedDate').value = sms.received_date;
                    document.getElementById('subject').value = sms.subject;
                    document.getElementById('content').value = sms.content;
                })
                .catch(function (error) {
                    console.error(error);
                });

            document.getElementById('editSmsCard').style.display = 'block';
        }

        function deleteSMS(id) {
            axios.delete(`/api/sms/${id}`)
                .then(() => {
                    location.reload();
                })
                .catch((error) => {
                    console.error(error);
                });
        }

        function toggleCreateForm() {
            var createSmsCard = document.getElementById('createSmsCard');
            if (createSmsCard.style.display === 'none') {
                document.getElementById('smsCard').style.display = 'none';
                createSmsCard.style.display = 'block';
            } else {
                createSmsCard.style.display = 'none';
                document.getElementById('smsCard').style.display = 'block';


            }
        }

        function submitCreateForm(event) {
            event.preventDefault();

            const formData = new FormData(document.getElementById('createSmsForm'));

            axios.post(`/api/sms`, formData)
                .then(response => {
                    console.log('SMS created successfully:', response);
                })
                .catch(error => {
                    console.error('Failed to create SMS:', error);
                });
        }
    </script>
{% endblock %}
