diff --git a/expenses/forms.py b/expenses/forms.py
index 0ad77c0..5393a52 100644
--- a/expenses/forms.py
+++ b/expenses/forms.py
@@ -1,8 +1,42 @@
 from django import forms
-from .models import Expense
+from .models import Expense, Category
 
 
 class ExpenseSearchForm(forms.ModelForm):
+    date_from = forms.DateField(
+        required=False,
+        input_formats=['%d.%m.%Y'],
+        widget=forms.DateInput(attrs={'placeholder': 'dd.mm.yyyy'})
+    )
+    date_to = forms.DateField(
+        required=False,
+        input_formats=['%d.%m.%Y'],
+        widget=forms.DateInput(attrs={'placeholder': 'dd.mm.yyyy'})
+    )
+    categories = forms.ModelMultipleChoiceField(
+        queryset=Category.objects.all(),
+        required=False,
+        widget=forms.CheckboxSelectMultiple(attrs={'class': 'form-check-input'})
+    )
+    SORT_CHOICES = (
+        ('date', 'Date'),
+        ('category', 'Category')
+    )
+    SORT_ORDER_CHOICES = (
+        ('asc', 'Ascending'),
+        ('desc', 'Descending')
+    )
+    sort_by = forms.ChoiceField(
+        choices=SORT_CHOICES,
+        required=False,
+        widget=forms.Select(attrs={'class': 'form-select'})
+    )
+    sort_order = forms.ChoiceField(
+        choices=SORT_ORDER_CHOICES,
+        required=False,
+        widget=forms.Select(attrs={'class': 'form-select'})
+    )
+
     class Meta:
         model = Expense
         fields = ('name',)
diff --git a/expenses/reports.py b/expenses/reports.py
index 764f992..ef22a26 100644
--- a/expenses/reports.py
+++ b/expenses/reports.py
@@ -1,4 +1,5 @@
 from collections import OrderedDict
+from django.db.models.functions import ExtractYear, ExtractMonth
 
 from django.db.models import Sum, Value
 from django.db.models.functions import Coalesce
@@ -14,3 +15,22 @@ def summary_per_category(queryset):
         .values_list('category_name', 's')
     ))
 
+
+def total_per_year(queryset):
+    return (
+        queryset
+        .annotate(year=ExtractYear('date'))
+        .values('year')
+        .annotate(total=Sum('amount'))
+        .order_by('-year')
+    )
+
+
+def total_per_month(queryset):
+    return (
+        queryset
+        .annotate(year=ExtractYear('date'), month=ExtractMonth('date'))
+        .values('year', 'month')
+        .annotate(total=Sum('amount'))
+        .order_by('-year', '-month')
+    )
diff --git a/expenses/templates/expenses/category_list.html b/expenses/templates/expenses/category_list.html
index 3fa249e..ab4ba33 100644
--- a/expenses/templates/expenses/category_list.html
+++ b/expenses/templates/expenses/category_list.html
@@ -7,6 +7,7 @@
 	<thead>
 		<tr>
 			<th>name</th>
+			<th>expenses count</th>
 			<th>actions</th>
 		</tr>
 	</thead>
@@ -17,6 +18,10 @@
 				{{obj.name}}
 			</td>
 			<td>
+				{{ obj.expense_count }}
+			</td>
+			<td>
+				<a href="{% url 'expenses:category-update' obj.id %}">edit</a>
 				<a href="{% url 'expenses:category-delete' obj.id %}">delete</a>
 			</td>
 		</tr>
diff --git a/expenses/templates/expenses/expense_list.html b/expenses/templates/expenses/expense_list.html
index d15d582..c153982 100644
--- a/expenses/templates/expenses/expense_list.html
+++ b/expenses/templates/expenses/expense_list.html
@@ -45,15 +45,89 @@
 
 {% include "_pagination.html" %}
 <hr>
-<table border="1">
-  <caption>Summary per category</caption>
-  <tr>
-    {% for category, total in summary_per_category.items %}
-	<tr>
-		<td>{{category}}:</td>
-		<td>{{total|floatformat:2}}</td>
-	</tr>
-	{% endfor %}
-  </tr>
-</table>
+<style>
+  .table-container {
+    display: table-row;
+  }
+  table {
+    display: table-cell;
+    padding: 10px;
+  }
+  caption {
+    margin-bottom: 10px;
+  }
+  span {
+    margin-right: 10px;
+  }
+</style>
+
+<div class="table-container">
+  <table border="1">
+    <caption>Total expenses per year</caption>
+    <thead>
+      <tr>
+        <th>Year</th>
+        <th>Total Amount</th>
+      </tr>
+    </thead>
+    <tbody>
+      {% for total in total_per_year %}
+        <tr>
+          <td>{{ total.year }}</td>
+          <td>{{ total.total|floatformat:2 }}</td>
+        </tr>
+      {% endfor %}
+    </tbody>
+  </table>
+
+  <table border="1">
+    <caption>Total expenses per month</caption>
+    <thead>
+      <tr>
+        <th>Month</th>
+        <th>Total Amount</th>
+      </tr>
+    </thead>
+    <tbody>
+      {% for total in total_per_month %}
+        <tr>
+          <td>{{ total.year }}.{{ total.month }}</td>
+          <td>{{ total.total|floatformat:2 }}</td>
+        </tr>
+      {% endfor %}
+    </tbody>
+  </table>
+
+  <table border="1">
+    <caption>Total expenses per category</caption>
+    <thead>
+      <tr>
+        <th>Category</th>
+        <th>Total</th>
+      </tr>
+    </thead>
+    <tbody>
+      {% for category, total in summary_per_category.items %}
+        <tr>
+          <td>{{ category }}</td>
+          <td>{{ total|floatformat:2 }}</td>
+        </tr>
+      {% endfor %}
+    </tbody>
+  </table>
+
+  <table border="1">
+    <caption>Total amount spent</caption>
+    <thead>
+      <tr>
+        <th>Total Amount</th>
+      </tr>
+    </thead>
+    <tbody>
+      <tr>
+        <td>{{ total_amount|floatformat:2 }}</td>
+      </tr>
+    </tbody>
+  </table>
+</div>
 {% endblock %}
diff --git a/expenses/urls.py b/expenses/urls.py
index 4ae9779..8d43514 100644
--- a/expenses/urls.py
+++ b/expenses/urls.py
@@ -1,7 +1,7 @@
 from django.views.generic import CreateView, UpdateView, DeleteView
 from django.urls import path, reverse_lazy
 from .models import Expense, Category
-from .views import ExpenseListView, CategoryListView
+from .views import ExpenseListView, CategoryListView, CategoryUpdateView
 
 
 urlpatterns = [
@@ -50,4 +50,11 @@ urlpatterns = [
             template_name='generic_delete.html'
          ),
          name='category-delete'),
+    path('category/<int:pk>/update/',
+         CategoryUpdateView.as_view(
+            model=Category,
+            success_url=reverse_lazy('expenses:category-list'),
+            template_name='generic_update.html'
+         ),
+         name='category-update'),
 ]
diff --git a/expenses/views.py b/expenses/views.py
index aefaae9..f076aee 100644
--- a/expenses/views.py
+++ b/expenses/views.py
@@ -1,8 +1,10 @@
 from django.views.generic.list import ListView
+from django.views.generic.edit import UpdateView
+from django.db.models import Count, Sum
 
 from .forms import ExpenseSearchForm
 from .models import Expense, Category
-from .reports import summary_per_category
+from .reports import summary_per_category, total_per_year, total_per_month
 
 
 class ExpenseListView(ListView):
@@ -11,20 +13,52 @@ class ExpenseListView(ListView):
 
     def get_context_data(self, *, object_list=None, **kwargs):
         queryset = object_list if object_list is not None else self.object_list
+        total_amount = 0
 
         form = ExpenseSearchForm(self.request.GET)
         if form.is_valid():
             name = form.cleaned_data.get('name', '').strip()
+            date_from = form.cleaned_data.get('date_from', None)
+            date_to = form.cleaned_data.get('date_to', None)
+            categories = form.cleaned_data.get('categories', None)
+            sort_by = form.cleaned_data.get('sort_by', None)
+            sort_order = form.cleaned_data.get('sort_order', 'asc')
+
             if name:
                 queryset = queryset.filter(name__icontains=name)
+            if date_from:
+                queryset = queryset.filter(date__gte=date_from)
+            if date_to:
+                queryset = queryset.filter(date__lte=date_to)
+            if categories:
+                queryset = queryset.filter(category__in=categories)
+            if sort_by:
+                if sort_order == 'desc':
+                    sort_by = '-' + sort_by
+                queryset = queryset.order_by(sort_by)
+
+            total_amount = queryset.aggregate(Sum('amount'))['amount__sum'] or 0
 
         return super().get_context_data(
             form=form,
             object_list=queryset,
+            total_amount=total_amount,
             summary_per_category=summary_per_category(queryset),
+            total_per_year=total_per_year(queryset),
+            total_per_month=total_per_month(queryset),
             **kwargs)
 
+
 class CategoryListView(ListView):
     model = Category
     paginate_by = 5
 
+    def get_queryset(self):
+        queryset = super().get_queryset()
+        queryset = queryset.annotate(expense_count=Count('expense'))
+        return queryset
+
+
+class CategoryUpdateView(UpdateView):
+    model = Category
+    fields = ['name']
diff --git a/project/templates/_pagination.html b/project/templates/_pagination.html
index 6398e29..c795f8a 100644
--- a/project/templates/_pagination.html
+++ b/project/templates/_pagination.html
@@ -15,3 +15,29 @@
         {% endif %}
     </span>
 </div>
+<!--
+  Problem: losing form state after click pagination link
+  Solve: prevent default action and include form data in url then use window.location.href
+-->
+<script>
+  document.addEventListener('DOMContentLoaded', function() {
+    var form = document.querySelector('form');
+    var paginationLinks = document.querySelectorAll('.pagination a');
+
+    paginationLinks.forEach(function(link) {
+      link.addEventListener('click', function(event) {
+        event.preventDefault();
+
+        var formValues = new URLSearchParams(new FormData(form)).toString();
+        var url = link.getAttribute('href');
+
+        if (url.includes('?')) {
+          url += '&' + formValues;
+        } else {
+          url += '?' + formValues;
+        }
+        window.location.href = url;
+      });
+    });
+  });
+</script>
